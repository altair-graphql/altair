// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GqlService .fillAllFields() should return query with fields filled 1`] = `
{
  "insertions": [
    {
      "index": 51,
      "string": " {
            id
            url
            name
            region
            titles
            seats
            words
            overlord
            swornMembers
          }",
    },
  ],
  "result": "
        query {
          GOTHouses(name: "first") {
            id
            url
            name
            region
            titles
            seats
            words
            overlord
            swornMembers
          }
        }
      ",
}
`;

exports[`GqlService .getIntrospectionSchema() should return schema for introspection data 1`] = `
GraphQLSchema {
  "__validationErrors": undefined,
  "_directives": [
    "@cacheControl",
    "@skip",
    "@include",
    "@deprecated",
  ],
  "_implementationsMap": {},
  "_mutationType": "Mutation",
  "_queryType": "Query",
  "_subTypeMap": {},
  "_subscriptionType": "Subscription",
  "_typeMap": {
    "Boolean": "Boolean",
    "CacheControlScope": "CacheControlScope",
    "File": "File",
    "GOTBook": "GOTBook",
    "GOTCharacter": "GOTCharacter",
    "GOTHouse": "GOTHouse",
    "HNUser": "HNUser",
    "Int": "Int",
    "Message": "Message",
    "Mutation": "Mutation",
    "Query": "Query",
    "String": "String",
    "Subscription": "Subscription",
    "Upload": "Upload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
  },
  "astNode": undefined,
  "description": undefined,
  "extensionASTNodes": undefined,
  "extensions": undefined,
}
`;

exports[`GqlService .parseQuery() should return GraphQL document 1`] = `
{
  "definitions": [
    {
      "directives": [],
      "kind": "OperationDefinition",
      "loc": {
        "end": 42,
        "start": 9,
      },
      "name": undefined,
      "operation": "query",
      "selectionSet": {
        "kind": "SelectionSet",
        "loc": {
          "end": 42,
          "start": 15,
        },
        "selections": [
          {
            "alias": undefined,
            "arguments": [],
            "directives": [],
            "kind": "Field",
            "loc": {
              "end": 32,
              "start": 27,
            },
            "name": {
              "kind": "Name",
              "loc": {
                "end": 32,
                "start": 27,
              },
              "value": "hello",
            },
            "selectionSet": undefined,
          },
        ],
      },
      "variableDefinitions": [],
    },
  ],
  "kind": "Document",
  "loc": {
    "end": 49,
    "start": 0,
  },
}
`;

exports[`GqlService .refactorQuery() should return edited query with generated name 1`] = `
"query refactored1000($name: String) {
  GOTHouses(name: $name) {
    ...GOTHouseFields
  }
}

query refactored3000($name2000: String) {
  GOTHouses(name: $name2000) {
    ...GOTHouseFields
  }
}

fragment GOTHouseFields on GOTHouse {
  id
  url
  name
  region
  titles
  seats
  words
}
"
`;

exports[`GqlService .refactorQuery() should return edited query with generated name 2`] = `
{
  "name": "first",
  "name2000": "second",
}
`;
