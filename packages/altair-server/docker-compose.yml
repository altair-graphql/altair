version: '3.9'

services:
  main:
    build:
      context: .
      target: development
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - 9229:9229 # debugging port
    command: yarn start:dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules # anonymous volume - start with --build -V to rebuild and recreate
    restart: unless-stopped
    networks:
      - server-network
    environment:
      MONGODB_URL: mongodb
      MONGODB_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_ROOT_PASSWORD}
    env_file:
      - .env
    depends_on:
      - mongodb

  mongodb:
    image: mongo:5.0.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
    volumes:
      - mongodb-data:/data/db
    networks:
      - server-network
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 1m30s
      timeout: 10s
      retries: 5

  mongo-express:
    image: mongo-express:0.54.0
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_ADMIN_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_ADMIN_PASSWORD}
    volumes:
      - mongodb-data:/data/db
    networks:
      - server-network
    healthcheck:
      test: wget --quiet --tries=3 --spider http://${MONGO_EXPRESS_ADMIN_USERNAME}:${MONGO_EXPRESS_ADMIN_PASSWORD}@localhost:8081 || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - mongodb

volumes:
  mongodb-data:

networks:
  server-network:
