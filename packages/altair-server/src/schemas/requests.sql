
create table requests (
  id bigint generated by default as identity primary key,
  request_version int default 1,
  name text,
  collection_id bigint references request_collections on delete cascade,
  content jsonb,
  inserted_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);
alter table requests enable row level security;

-- TODO: Check current plan limit
create policy "Can only manage own requests." on requests
for all using (auth.uid() in
  (
    select workspaces.owner_id
    from workspaces, request_collections
    where requests.collection_id = request_collections.id
      and workspaces.id = request_collections.workspace_id )
  );
create policy "enforce current product config on requests" on requests
for insert with check (
  (
    select request_count_limit
    from product_configs
    where id = 'noproduct'
  ) > (
    select count(requests.id)
    from requests, request_collections, workspaces
    where requests.collection_id = request_collections.id
      and workspaces.id = request_collections.workspace_id
      and workspaces.owner_id = auth.uid()
  )
);
create trigger handle_updated_at before update on requests 
  for each row execute procedure moddatetime (updated_at);
