

create table request_collections (
  id bigint generated by default as identity primary key,
  collection_name text,
  workspace_id bigint references workspaces,
  parent_collection_id bigint references request_collections on delete cascade,
  inserted_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

alter table request_collections enable row level security;

-- TODO: Check current plan limit
create policy "Can only manage own request collections." on request_collections
for all using (auth.uid() in
  (
    select owner_id
    from workspaces
    where workspaces.id = request_collections.workspace_id )
  );
create policy "enforce current product config on request_collections" on request_collections
for insert with check (
  (
    select request_collection_count_limit
    from product_configs
    where id = 'noproduct'
  ) > (
    select count(request_collections.id)
    from request_collections, workspaces
    where workspaces.id = request_collections.workspace_id
      and workspaces.owner_id = auth.uid()
  )
);

create trigger handle_updated_at before update on request_collections 
  for each row execute procedure moddatetime (updated_at);
