name: PR - testing

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        node-version: [14.x]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: restore lerna
      uses: actions/cache@v2
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
    - run: yarn --frozen-lockfile
    - uses: browser-actions/setup-chrome@latest
    - name: Build apps (with retries)
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 15
        max_attempts: 3
        command: yarn build:ci
    - name: Run headless test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: |
          # Retry 3 times before the steps actually fails
          (echo "===== Headless Tests Attempt: 1 ====" && yarn test:ci) || \
          (echo "===== Headless Tests Attempt: 2 ====" && yarn test:ci) || \
          (echo "===== Headless Tests Attempt: 3 ====" && yarn test:ci) || \
          (echo "==== Headless Tests Step Failed ====" && exit 1)
    # https://github.com/tanshuai/electron-playwright-e2e-test-quick-start/blob/1e2c653bc2d0af85d98de1c58e56a888f17fe671/.github/workflows/ci.yml#L39-L44
    - name: Upload Test Results ðŸ—ƒ
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: screenshots
        path: packages/altair-electron/e2e/*.png
  # https://github.com/marketplace/actions/deployment-action
  # deploy-surge:
  #   runs-on: ubuntu-latest
  #   env:
  #     SURGE_URL: ${{ github.sha }}-${{ github.repository_owner }}-altair.surge.sh
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: 12
  #   - run: yarn --frozen-lockfile
  #   - run: yarn build:ci
  #   - name: Deploy to surge.sh
  #     uses: dswistowski/surge-sh-action@v1
  #     with:
  #       domain: '${{ env.SURGE_URL }}'
  #       project: './packages/altair-app/dist'
  #       login: ${{ secrets.surge_login }}
  #       token: ${{ secrets.surge_token }}
