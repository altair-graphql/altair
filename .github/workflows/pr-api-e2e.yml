name: API E2E Testing

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:20

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
          POSTGRES_DB: tests
        ports:
          - '5434:5432'
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: yarn --frozen-lockfile --network-timeout 1000000
      - name: Build apps (with retries)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: yarn build:ci
      - name: Migration
        run: yarn --cwd packages/altair-api migrate:e2e
      - name: Run E2E
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
        run: yarn --cwd packages/altair-api test:e2e
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
