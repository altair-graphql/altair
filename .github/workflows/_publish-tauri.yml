name: tauri-publish-workflow

on:
  workflow_call:
    inputs:
      node_version:
        description: "Node.js version to use"
        default: "22"
        type: string
      build:
        description: "Whether to build"
        required: false
        default: true
        type: boolean
      publish:
        description: "Whether to publish"
        required: false
        default: true
        type: boolean
      publish_chocolatey:
        description: "Whether to publish to Chocolatey"
        required: false
        default: true
        type: boolean
    outputs:
      # Map the workflow output(s) to job output(s)
      version:
        description: "Built/published version from the workflow"
        value: ${{ jobs.tauri.outputs.version }}
  workflow_dispatch:
    inputs:
      node_version:
        description: "Node.js version to use"
        default: "22"
        type: string
      build:
        description: "Whether to build"
        required: false
        default: true
        type: boolean
      publish:
        description: "Whether to publish"
        required: false
        default: true
        type: boolean
      publish_chocolatey:
        description: "Whether to publish to Chocolatey"
        required: false
        default: true
        type: boolean

jobs:
  tauri:
    # TODO: Still experimental
    continue-on-error: true
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    # Map the job output(s) to step output(s)
    outputs:
      version: ${{ steps.getversion.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: "pnpm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: pnpm i --frozen-lockfile
      - uses: nick-invision/retry@v2
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: pnpm build:ci

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          projectPath: packages/altair-tauri
          args: ${{ matrix.args }}
      - name: Read VERSION file
        id: getversion
        run: |
          echo "::set-output name=version::$(cat VERSION)"
      - name: Read VERSION file
        id: getversionv2
        run: |
          echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
