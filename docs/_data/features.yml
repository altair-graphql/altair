-
  title: Multiple Windows
  content: >
    Altair provides the option to open multiple windows each with a distinct state
    that is preserved across browser sessions. In addition, you can give each window
    a custom name.
-
  title: Syntax and Error Highlighting
  content: >
    With syntax highlighting, you have immediate feedback on what you input in the
    query editor and can easily detect errors. The editor also affords folding of
    query objects.
-
  title: Autocompletion
  content: >
    You need not dive back and forth between the API docs and Altair, as
    intelligent query auto-suggestion is provided by Altair.
-
  title: Documentation Search
  content: >
    Altair fetches the docs of all endpoints and fields offered by your GraphQL server
    and provides a rich interface to conveniently search through these and gain instant
    insight into the structure of the API.
-
  title: Headers and Response Stats
  content: >
    Altair provides flexibility by allowing you to set custom request headers. Also, the
    response status code and time taken are available upon completion of the request.
-
  title: Variables and Fragments
  content: >
    Altair provides convenient support for setting GraphQL variables. You can also add
    fragments in the code editor and reference them within the parent query. Fragments can
    also be added from the docs bar.
-
  title: Add Queries and Fragments
  content: >
    You can easily add a query (or fragment) you see in the documentation into the editor
    without having to manually type every field within the query. This makes it easier to
    test and develop with the available queries from the GraphQL server.
-
  title: Prettify Query
  content: >
    You can format the query in the editor in a properly indented manner for easier reading.
    This makes it easy to work with queries you might copy from one file to another,
    which might have lost their indentation (or were never indented before).
-
  title: Compress Query
  content: >
    You can compress the query to a minified form, removing any unnecessary whitespace
    and comments. You can use this after you have made a query and you want to use it in your
    client side application. This helps save as many bytes as possible when making network requests.
-
  title: History of recent queries
  content: >
    You can view a list of your most recent queries that you make in each window, so you can easily go
    back to a query you tried previously.
-
  title: GraphQL Subscriptions (with desktop notifications)
  content: >
    You can test your GraphQL subscriptions easily and also get a notification when you are away from the
    app (desktop apps only). This is very handy when developing apps that use the realtime feature of
    GraphQL, like chatting ang gaming applications that need realtime feedback.
-
  title: Import and Export Queries
  content: >
    You can export the query you are working on and import the .agq file into another device
    (also supports drag and drop). This is also useful for sharing queries with variables and headers
    with other members of your team.
-
  title: Multiple Languages
  content: >
    You can use Altair comfortably in your native language with several languages
    (including English, Chinese, French, Spanish, Russian, German, Brazilian among others) supported.
    You can also contribute and add support for your language by clicking [here.](https://altair-gql-translate.surge.sh/)
-
  title: Multiple Themes
  content: >
    You can use Altair with either the light or the dark theme, depending on which theme you like. *Support for custom theme is coming very soon*.
-
  title: Multiple Platforms
  content: >
    Use Altair on any platform you are. Altair is available in linux (as a binary and via [snapcraft](https://snapcraft.io/altair)),
    macOS (as a binary and via homebrew), windows, [Google Chrome](https://chrome.google.com/webstore/detail/altair-graphql-client/flnheeellpciglgpaodhkhmapeljopja), [Mozilla Firefox](https://addons.mozilla.org/en-US/firefox/addon/altair-graphql-client/), and also as [an online web application](https://altair-gql.sirmuel.design/).
-
  title: Any missing feature?
  content: >
    Are we missing any feature that you think Altair should have? Let us know by [creating an issue on GitHub](https://github.com/imolorhe/altair/issues/new?labels=&template=Feature_request.md).